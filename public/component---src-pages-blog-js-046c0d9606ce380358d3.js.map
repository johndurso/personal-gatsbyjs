{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","BlogPage","a","createElement","title","keywords","data","allMarkdownRemark","edges","map","post","key","node","id","frontmatter","author","date","to","path","className","SEO","_ref","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Header","siteTitle","react_default","style","background","padding","marginBottom","margin","maxWidth","gatsby_browser_entry","color","textDecoration","Footer","position","bottom","width","Date","getFullYear","href","Layout","children","Fragment","header","paddingTop","footer","_755544856"],"mappings":"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","file":"component---src-pages-blog-js-046c0d9606ce380358d3.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst BlogPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <h1>Latest posts</h1>\n    {data.allMarkdownRemark.edges.map(post => (\n\t\t<div key={post.node.id}>\n\t\t\t<h3>{post.node.frontmatter.title}</h3>\n\t\t\t<small>Posted by {post.node.frontmatter.author} on {post.node.frontmatter.date}</small>\n\t\t\t<br /><br />\n\t\t\t<Link to={post.node.frontmatter.path}>Read more</Link>\n\t\t\t<br /><br />\n\t\t\t<hr />\n\t\t</div>\n    ))}\n    <div>\n      <Link className=\"button primary\" to=\"/\">Learn more</Link>\n    </div>\n  </Layout>\n)\n\n// export const pageQuery = graphql`\n// \tquery BlogIndexQuery {\n// \t  allMarkdownRemark {\n// \t    edges {\n// \t      node {\n// \t      \tid {\n// \t\t        frontmatter {\n// \t\t          path\n// \t\t          title\n// \t\t          date\n// \t\t          author\n// \t\t        }\n// \t\t    }\n// \t        excerpt\n// \t      }\n// \t    }\n// \t  }\n// \t}\n// `\n\nexport default BlogPage","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: `#36405f`,\n      padding: `30px 0`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link to=\"/\" style={{\n            color: `#c4af9c`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n    <div className=\"navigation\">\n    <Link to=\"/\">Home</Link> \n    {` `}\n    <Link to=\"/about/\">About</Link>\n    {` `}\n    <Link to=\"/blog/\">Blog</Link>\n    {` `}\n    <Link to=\"/contact/\">Contact</Link>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Footer = ({ siteTitle }) => (\n  <div style={{\n        marginBottom: `150px`,\n  }}\n  >\n    <div\n      style={{\n        position: `fixed`,\n        bottom: `0`,\n        width: `100%`,\n        background: `#36405f`,\n        padding: `35px 0 10px 0`,\n        color: `#fff`,\n      }}\n    >\n      <div style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem`,\n        }}\n      >\n        <p>\n            Â© {new Date().getFullYear()} developed by <a href=\"https://twitter.com/hivemindjohn\">@hivemindjohn</a>\n        </p>\n      </div>\n    </div>\n  </div>\n)\n\nFooter.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Footer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\n\nimport './layout.scss'\nimport './buttons.scss'\nimport './form.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}