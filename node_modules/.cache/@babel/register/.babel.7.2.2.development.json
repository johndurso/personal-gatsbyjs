{
  "{\"sourceRoot\":\"/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs/node_modules/gatsby-codemods/transforms\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs\",\"filename\":\"/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs/node_modules/gatsby-codemods/transforms/global-graphql-calls.js\",\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassProperty\":{\"enter\":[null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs/node_modules/gatsby-codemods/transforms",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs",
      "filename": "/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs/node_modules/gatsby-codemods/transforms/global-graphql-calls.js",
      "configFile": false,
      "envName": "development",
      "root": "/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassProperty": {
              "enter": [
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs/node_modules/gatsby-codemods/transforms/global-graphql-calls.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          [
            "flow",
            {}
          ],
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs/node_modules/gatsby-codemods/transforms/global-graphql-calls.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs/node_modules/gatsby-codemods/transforms",
        "sourceFileName": "global-graphql-calls.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst MODULE_NAME = `gatsby`;\nconst IMPORT_NAME = `graphql`;\n\nfunction findGatsbyRequire(root, j) {\n  const requires = root.find(j.VariableDeclarator, {\n    init: {\n      callee: {\n        name: `require`\n      }\n    }\n  });\n  let string = requires.find(j.VariableDeclarator, {\n    init: {\n      arguments: [{\n        value: MODULE_NAME\n      }]\n    }\n  });\n  if (string.length) return string; // require(`gatsby`)\n\n  return requires.filter(path => {\n    let template = path.get(`init`, `arguments`, 0, `quasis`, 0).node;\n    return !!template && template.value.raw === MODULE_NAME;\n  });\n}\n\nfunction addEsmImport(j, root, tag) {\n  let existingImport = root.find(j.ImportDeclaration, {\n    source: {\n      value: `gatsby`\n    }\n  });\n  if (existingImport.find(j.ImportSpecifier, {\n    imported: {\n      name: `graphql`\n    }\n  }).length) return; // already exists\n\n  if (!existingImport.length) {\n    const first = root.find(j.Program).get(`body`, 0);\n    const comments = first.node.comments.splice(0);\n    const importStatement = j.importDeclaration([j.importSpecifier(j.identifier(IMPORT_NAME))], j.literal(MODULE_NAME));\n    importStatement.comments = comments;\n    root.find(j.Program).get(`body`, 0).insertBefore(importStatement);\n    return;\n  }\n\n  const namespace = existingImport.find(j.ImportNamespaceSpecifier);\n\n  if (namespace.length) {\n    let name = namespace.get(0).node.local.name;\n    root.find(j.TaggedTemplateExpression, {\n      tag: {\n        name: `graphql`\n      }\n    }).replaceWith(({\n      node\n    }) => {\n      node.tag = j.memberExpression(j.identifier(name), j.identifier(IMPORT_NAME));\n      return node;\n    });\n    return;\n  }\n\n  let specifiers = existingImport.get(0).node.specifiers;\n  existingImport.get(`specifiers`, specifiers.length - 1).insertAfter(j.importSpecifier(j.identifier(IMPORT_NAME)));\n}\n\nfunction addRequire(j, root, tag) {\n  let existingImport = findGatsbyRequire(root, j);\n  if (existingImport.find(j.Identifier, {\n    value: IMPORT_NAME\n  }).length) return; // already exists\n\n  if (!existingImport.length) {\n    root.find(j.Program).get(`body`, 0).insertBefore(j.template.statement([`const { ${IMPORT_NAME} } = require('${MODULE_NAME}');\\n`]));\n    return;\n  }\n\n  const pattern = existingImport.find(j.ObjectPattern);\n\n  if (!pattern.length) {\n    let name = existingImport.get(`id`).node.name;\n    root.find(j.TaggedTemplateExpression, {\n      tag: {\n        name: `graphql`\n      }\n    }).replaceWith(({\n      node\n    }) => {\n      node.tag = j.memberExpression(j.identifier(name), j.identifier(IMPORT_NAME));\n      return node;\n    });\n    return;\n  }\n\n  let properties = pattern.get(0).node.properties;\n  let property = j.objectProperty(j.identifier(IMPORT_NAME), j.identifier(IMPORT_NAME));\n  property.shorthand = true;\n  pattern.get(`properties`, properties.length - 1).insertAfter(property);\n}\n\nmodule.exports = (file, api, options) => {\n  const j = api.jscodeshift;\n  const root = j(file.source);\n  const tags = root.find(j.TaggedTemplateExpression, {\n    tag: {\n      name: `graphql`\n    }\n  });\n  if (!tags.length) return false;\n  let tag = tags.get(0);\n  const useImportSyntax = root.find(j.ImportDeclaration, {\n    importKind: `value`\n  }).length > 0 || root.find(j.VariableDeclarator, {\n    init: {\n      callee: {\n        name: `require`\n      }\n    }\n  }).length === 0;\n\n  if (useImportSyntax) {\n    addEsmImport(j, root, tag);\n  } else {\n    addRequire(j, root, tag);\n  }\n\n  return root.toSource({\n    quote: `single`,\n    lineTerminator: `\\n`\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "global-graphql-calls.js"
      ],
      "names": [
        "MODULE_NAME",
        "IMPORT_NAME",
        "findGatsbyRequire",
        "root",
        "j",
        "requires",
        "find",
        "VariableDeclarator",
        "init",
        "callee",
        "name",
        "string",
        "arguments",
        "value",
        "length",
        "filter",
        "path",
        "template",
        "get",
        "node",
        "raw",
        "addEsmImport",
        "tag",
        "existingImport",
        "ImportDeclaration",
        "source",
        "ImportSpecifier",
        "imported",
        "first",
        "Program",
        "comments",
        "splice",
        "importStatement",
        "importDeclaration",
        "importSpecifier",
        "identifier",
        "literal",
        "insertBefore",
        "namespace",
        "ImportNamespaceSpecifier",
        "local",
        "TaggedTemplateExpression",
        "replaceWith",
        "memberExpression",
        "specifiers",
        "insertAfter",
        "addRequire",
        "Identifier",
        "statement",
        "pattern",
        "ObjectPattern",
        "properties",
        "property",
        "objectProperty",
        "shorthand",
        "module",
        "exports",
        "file",
        "api",
        "options",
        "jscodeshift",
        "tags",
        "useImportSyntax",
        "importKind",
        "toSource",
        "quote",
        "lineTerminator"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/johndurso/Desktop/gatsby-app/personal-gatsbyjs/node_modules/gatsby-codemods/transforms",
      "sourcesContent": [
        "\"use strict\";\n\nconst MODULE_NAME = `gatsby`;\nconst IMPORT_NAME = `graphql`;\n\nfunction findGatsbyRequire(root, j) {\n  const requires = root.find(j.VariableDeclarator, {\n    init: {\n      callee: {\n        name: `require`\n      }\n    }\n  });\n  let string = requires.find(j.VariableDeclarator, {\n    init: {\n      arguments: [{\n        value: MODULE_NAME\n      }]\n    }\n  });\n  if (string.length) return string; // require(`gatsby`)\n\n  return requires.filter(path => {\n    let template = path.get(`init`, `arguments`, 0, `quasis`, 0).node;\n    return !!template && template.value.raw === MODULE_NAME;\n  });\n}\n\nfunction addEsmImport(j, root, tag) {\n  let existingImport = root.find(j.ImportDeclaration, {\n    source: {\n      value: `gatsby`\n    }\n  });\n  if (existingImport.find(j.ImportSpecifier, {\n    imported: {\n      name: `graphql`\n    }\n  }).length) return; // already exists\n\n  if (!existingImport.length) {\n    const first = root.find(j.Program).get(`body`, 0);\n    const comments = first.node.comments.splice(0);\n    const importStatement = j.importDeclaration([j.importSpecifier(j.identifier(IMPORT_NAME))], j.literal(MODULE_NAME));\n    importStatement.comments = comments;\n    root.find(j.Program).get(`body`, 0).insertBefore(importStatement);\n    return;\n  }\n\n  const namespace = existingImport.find(j.ImportNamespaceSpecifier);\n\n  if (namespace.length) {\n    let name = namespace.get(0).node.local.name;\n    root.find(j.TaggedTemplateExpression, {\n      tag: {\n        name: `graphql`\n      }\n    }).replaceWith(({\n      node\n    }) => {\n      node.tag = j.memberExpression(j.identifier(name), j.identifier(IMPORT_NAME));\n      return node;\n    });\n    return;\n  }\n\n  let specifiers = existingImport.get(0).node.specifiers;\n  existingImport.get(`specifiers`, specifiers.length - 1).insertAfter(j.importSpecifier(j.identifier(IMPORT_NAME)));\n}\n\nfunction addRequire(j, root, tag) {\n  let existingImport = findGatsbyRequire(root, j);\n  if (existingImport.find(j.Identifier, {\n    value: IMPORT_NAME\n  }).length) return; // already exists\n\n  if (!existingImport.length) {\n    root.find(j.Program).get(`body`, 0).insertBefore(j.template.statement([`const { ${IMPORT_NAME} } = require('${MODULE_NAME}');\\n`]));\n    return;\n  }\n\n  const pattern = existingImport.find(j.ObjectPattern);\n\n  if (!pattern.length) {\n    let name = existingImport.get(`id`).node.name;\n    root.find(j.TaggedTemplateExpression, {\n      tag: {\n        name: `graphql`\n      }\n    }).replaceWith(({\n      node\n    }) => {\n      node.tag = j.memberExpression(j.identifier(name), j.identifier(IMPORT_NAME));\n      return node;\n    });\n    return;\n  }\n\n  let properties = pattern.get(0).node.properties;\n  let property = j.objectProperty(j.identifier(IMPORT_NAME), j.identifier(IMPORT_NAME));\n  property.shorthand = true;\n  pattern.get(`properties`, properties.length - 1).insertAfter(property);\n}\n\nmodule.exports = (file, api, options) => {\n  const j = api.jscodeshift;\n  const root = j(file.source);\n  const tags = root.find(j.TaggedTemplateExpression, {\n    tag: {\n      name: `graphql`\n    }\n  });\n  if (!tags.length) return false;\n  let tag = tags.get(0);\n  const useImportSyntax = root.find(j.ImportDeclaration, {\n    importKind: `value`\n  }).length > 0 || root.find(j.VariableDeclarator, {\n    init: {\n      callee: {\n        name: `require`\n      }\n    }\n  }).length === 0;\n\n  if (useImportSyntax) {\n    addEsmImport(j, root, tag);\n  } else {\n    addRequire(j, root, tag);\n  }\n\n  return root.toSource({\n    quote: `single`,\n    lineTerminator: `\\n`\n  });\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 499162500000
  }
}